When would you want to use a remote repository rather than keeping all your work
local?

    When working from multiple computers or when more than one developer is working on a repository.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    So you can choose when you want changes injected into work in progress.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A clone would be used when setting up to work on a repository for the first time, or when you want to reject any work you've done and reset to a known state.   A branch would be used to work on some new concept or change without affecting the main code branch.   A fork is used when you want to clone a GITHUB repository to make your own personal on-line version of the repository.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    To minimize the data transfer when you want to push/pull.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    GIT local would impede collaboration because it is more difficult to share your changes with another developer or group.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Changes to the branch can be made to explore concepts without affecting the main code line.
    But changes to the branch have to be merged back to main to make them available to the main code line.
